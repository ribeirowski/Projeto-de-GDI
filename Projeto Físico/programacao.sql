-------------------------
-------PROGRAMAÇÃO-------
-------------------------

-- CADASTRAR BASE MILITAR (PROCEDURE)
CREATE OR REPLACE PROCEDURE CADASTRAR_BASE (CODIGO_BASE VARCHAR2, NOME_BASE VARCHAR2, COORD_LONG VARCHAR2, COORD_LAT VARCHAR2) IS

BEGIN
    INSERT INTO BASE_MILITAR VALUES (CODIGO_BASE, NOME_BASE, COORD_LAT, COORD_LONG);
    DBMS_OUTPUT.PUT_LINE ('BASE MILITAR ' || NOME_BASE || ' CADASTRADA COM ÊXITO!');
EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        DBMS_OUTPUT.PUT_LINE ('ERRO! A BASE MILITAR COM CÓDIGO ' || CODIGO_BASE || ' JÁ ESTÁ CADASTRADA!');
END;

-- CADASTRAR MARINHEIRO (PROCEDURE)
CREATE OR REPLACE PROCEDURE CADASTRAR_MARINHEIRO (CPF_MARINHEIRO VARCHAR2, NOME_MARINHEIRO VARCHAR2, NASC_MARINHEIRO VARCHAR2, SALARIO NUMBER, COD_BASE VARCHAR2, CPF_CHEFE VARCHAR2) IS
    DATA_NASC DATE;
BEGIN
    DATA_NASC := TO_DATE(NASC_MARINHEIRO, 'dd/mm/yyyy');
    INSERT INTO MARINHEIRO VALUES (CPF_MARINHEIRO, NOME_MARINHEIRO, DATA_NASC, SALARIO, COD_BASE, CPF_CHEFE);
    DBMS_OUTPUT.PUT_LINE ('MARINHEIRO ' || NOME_MARINHEIRO || ' CADASTRADO COM ÊXITO!');
EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        DBMS_OUTPUT.PUT_LINE ('ERRO! O MARINHEIRO COM CPF ' || CPF_MARINHEIRO || ' JÁ ESTÁ CADASTRADO!');
END;

-- CADASTRAR_PIRATA (PROCEDURE)
CREATE OR REPLACE PROCEDURE CADASTRAR_PIRATA (CPF_PIRATA VARCHAR2, NOME_PIRATA VARCHAR2, NASC_PIRATA VARCHAR2, RUM_FAV VARCHAR2, IS_CAP VARCHAR2, COD_NAVIO_P VARCHAR2) IS
    DATA_NASC DATE;
BEGIN
    DATA_NASC := TO_DATE(NASC_PIRATA, 'dd/mm/yyyy');
    IF IS_CAP = 'C' OR IS_CAP = 'T' THEN
        INSERT INTO PIRATA VALUES (CPF_PIRATA, NOME_PIRATA, DATA_NASC, NULL, RUM_FAV);
        IF IS_CAP = 'C' THEN
            INSERT INTO CAPITAO VALUES (CPF_PIRATA);
            DBMS_OUTPUT.PUT_LINE ('CAPITÃO ' || NOME_PIRATA || ' CADASTRADO COM ÊXITO!');
        ELSIF IS_CAP = 'T' THEN
            INSERT INTO TRIPULANTE VALUES (CPF_PIRATA, COD_NAVIO_P);
            DBMS_OUTPUT.PUT_LINE ('TRIPULANTE ' || NOME_PIRATA || ' CADASTRADO COM ÊXITO!');
        END IF;
    ELSE
        DBMS_OUTPUT.PUT_LINE ('IMPOSSÍVEL CADASTRAR PIRATA!');
    END IF;
EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        DBMS_OUTPUT.PUT_LINE ('ERRO! O PIRATA COM CPF ' || CPF_PIRATA || ' JÁ ESTÁ CADASTRADO!');
END;

-- CADASTRAR NAVIO (PROCEDURE)
CREATE OR REPLACE PROCEDURE CADASTRAR_NAVIO (CODIGO_NAVIO VARCHAR2, NOME_NAVIO VARCHAR2, MODELO VARCHAR2, CAPACIDADE NUMBER, CPF_C VARCHAR2,TIPO VARCHAR2) IS

BEGIN
    IF TIPO = 'P' THEN
        INSERT INTO NAVIO_PIRATA VALUES (CODIGO_NAVIO, NOME_NAVIO, MODELO, CAPACIDADE, CPF_C);
        DBMS_OUTPUT.PUT_LINE ('NAVIO PIRATA ' || NOME_NAVIO || ' CADASTRADO COM ÊXITO!');
    ELSIF TIPO = 'M' THEN
        INSERT INTO NAVIO_MARINHA VALUES (CODIGO_NAVIO, NOME_NAVIO, MODELO, CAPACIDADE);
        DBMS_OUTPUT.PUT_LINE ('NAVIO DA MARINHA ' || NOME_NAVIO || ' CADASTRADO COM ÊXITO!');
    ELSE
        DBMS_OUTPUT.PUT_LINE ('TIPO DE NAVIO INVÁLIDO!');
    END IF;
EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        DBMS_OUTPUT.PUT_LINE ('ERRO! O NAVIO COM CÓDIGO ' || CODIGO_NAVIO || ' JÁ ESTÁ CADASTRADO!');
END;

-- CADASTRAR TERRITÓRIO (PROCEDURE)
CREATE OR REPLACE PROCEDURE CADASTRAR_TERRITORIO (QUADRANTE VARCHAR2, NOME_TERRITORIO VARCHAR2) IS

BEGIN
    INSERT INTO TERRITORIO VALUES (QUADRANTE, NOME_TERRITORIO, NULL);
    DBMS_OUTPUT.PUT_LINE ('TERRITÓRIO ' || NOME_TERRITORIO || ' CADASTRADO COM ÊXITO!');
EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        DBMS_OUTPUT.PUT_LINE ('ERRO! O TERRITÓRIO NO QUADRANTE ' || QUADRANTE || ' JÁ ESTÁ CADASTRADO!');
END;

-- ADOTAR UM PET (PROCEDURE)
CREATE OR REPLACE PROCEDURE ADOTAR_PET (CODIGO_PET VARCHAR2, CPF_DONO VARCHAR2, NOME_PET VARCHAR2, ESPECIE VARCHAR2) IS

BEGIN 
    INSERT INTO PET VALUES (CODIGO_PET, CPF_DONO, NOME_PET, ESPECIE);
    DBMS_OUTPUT.PUT_LINE ('PARABÉNS, ' || NOME_PET || ' FOI ADOTADO COM ÊXITO!');
EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        DBMS_OUTPUT.PUT_LINE ('ERRO! O PET COM CÓDIGO ' || CODIGO_PET || ' JÁ ESTÁ CADASTRADO!');
END;

-- DESIGNAR RECOMPENSA PELO PIRATA (PROCEDURE)
-- CONSERTAR IF/ELSE
CREATE OR REPLACE PROCEDURE DESIGNAR_RECOMPENSA (CPF_PIRATA VARCHAR2, VALOR NUMBER) IS 
	CPF_PI VARCHAR(11);
BEGIN 
    SELECT CPF INTO CPF_PI FROM PIRATA WHERE CPF = CPF_PIRATA;
    IF CPF_PI IS NOT NULL THEN
        UPDATE PIRATA SET RECOMPENSA = VALOR WHERE CPF = CPF_PI;
        DBMS_OUTPUT.PUT_LINE ('RECOMPENSA DE R$' || VALOR || ' DESIGNADA COM ÊXITO!'); 
    ELSE 
        DBMS_OUTPUT.PUT_LINE ('CPF NÃO EXISTE, IMPOSSÍVEL DESIGNAR RECOMPENSA!'); 
    END IF;
END;

-- PROTEGER TERRITÓRIO (PROCEDURE)
CREATE OR REPLACE PROCEDURE PROTEGER_TERRITORIO (COD_BASE VARCHAR2, QUADRANTE_TER VARCHAR2) IS

BEGIN
    INSERT INTO PROTEGE VALUES (COD_BASE, QUADRANTE_TER);
    DBMS_OUTPUT.PUT_LINE ('TERRITÓRIO ' || QUADRANTE_TER || ' PROTEGIDO COM ÊXITO!');
EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        DBMS_OUTPUT.PUT_LINE ('ERRO! O TERRITÓRIO NO QUADRANTE ' || QUADRANTE_TER || ' JÁ ESTÁ PROTEGIDO!');
END;

-- DOMINAR TERRITÓRIO (PROCEDURE)
CREATE OR REPLACE PROCEDURE DOMINAR_TERRITORIO (QUADRANTE_TER VARCHAR2, CPF_CAP VARCHAR2) IS
    NOME_CAP VARCHAR2(100);
    NOME_TER VARCHAR2(100);
BEGIN
    SELECT P.NOME INTO NOME_CAP FROM CAPITAO C, PIRATA P WHERE P.CPF = C.CPF AND P.CPF = CPF_CAP;
    SELECT NOME INTO NOME_TER FROM TERRITORIO WHERE QUADRANTE = QUADRANTE_TER;
    UPDATE TERRITORIO SET CPF_CAPITAO = CPF_CAP WHERE CPF_CAP IN (SELECT CPF FROM CAPITAO);
    DBMS_OUTPUT.PUT_LINE ('O TERRITÓRIO ' || NOME_TER ||' FOI DOMINADO POR '|| NOME_CAP ||'!');
EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        DBMS_OUTPUT.PUT_LINE ('ERRO! O TERRITÓRIO ' || QUADRANTE_TER || ' JÁ FOI DOMINADO!');
END;

-- REALIZAR EXPEDIÇÃO (PROCEDURE)
CREATE OR REPLACE PROCEDURE REALIZAR_EXPEDICAO (CPF_MAR VARCHAR2, QUADRANTE_TER VARCHAR2, COD_NAVIO VARCHAR2,  DATA_EXPEDICAO VARCHAR2) IS
    DATA_EXP DATE;

BEGIN
    DATA_EXP := TO_DATE(DATA_EXPEDICAO, 'dd/mm/yyyy');
    INSERT INTO EXPEDICAO VALUES (CPF_MAR, QUADRANTE_TER, COD_NAVIO, DATA_EXP);
    DBMS_OUTPUT.PUT_LINE ('EXPEDIÇÃO REALIZADA COM ÊXITO EM ' || DATA_EXP || ' !');
EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        DBMS_OUTPUT.PUT_LINE ('ERRO! ESSA EXPEDIÇÃO JÁ FOI REALIZADA!');
END;

-- CAPTURAR PIRATA (PROCEDURE)
-- IMPLEMENTAR CONDIÇÃO DE QUE SÓ PODE CAPTURAR PIRATA SE O O MARINHEIRO E O PIRATA ESTIVEREM NO MESMO QUADRANTE
CREATE OR REPLACE PROCEDURE CAPTURAR_PIRATA (CPF_M VARCHAR2, CPF_P VARCHAR2, QUADRANTE VARCHAR2, COD_NAVIO VARCHAR2, DT VARCHAR2) IS
    DATA_CAP DATE;
BEGIN
    DATA_CAP := TO_DATE(DT, 'dd/mm/yyyy');
    INSERT INTO CAPTURA VALUES (CPF_P, CPF_M, QUADRANTE, COD_NAVIO, DATA_CAP);
    DBMS_OUTPUT.PUT_LINE ('PIRATA CAPTURADO COM ÊXITO!');
EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        DBMS_OUTPUT.PUT_LINE ('ERRO! O PIRATA COM CPF ' || CPF_P || ' JÁ FOI CAPTURADO!');
END;

-- FUGIR DA PRISÃO (PROCEDURE)
-- CONSERTAR IF/ELSE
CREATE OR REPLACE PROCEDURE FUGIR_PRISAO (CPF_PIRATA VARCHAR2) IS
    CPF_PI VARCHAR(11);
BEGIN
    CPF_PI := NULL; 
    SELECT CPF_P INTO CPF_PI FROM CAPTURA WHERE CPF_P = CPF_PIRATA;
    IF CPF_PI = CPF_PIRATA THEN
        DELETE FROM CAPTURA WHERE CPF_P = CPF_PIRATA;
        DBMS_OUTPUT.PUT_LINE ('O PIRATA DE CPF ' || CPF_PIRATA || ' FUGIU DA PRISÃO!'); 
    ELSE
        DBMS_OUTPUT.PUT_LINE ('CPF NÃO CADASTRADO NA PRISÃO, IMPOSSÍVEL FUGIR!'); 
    END IF;
END;

-- VERIFICAR RECOMPENSA PELO PIRATA (FUNCTION)


-- VERIFICAR DATA DA EXPEDIÇÃO (FUNCTION)


-- VERIFICAR IDADE DAS PESSOAS (FUNCTION)


-- VERIFICAR O CAPITÃO PIRATA (FUNCTION)
